<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.apache.org/royale/spark" xmlns:mx="library://ns.apache.org/royale/mx"
		  gap="20">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			
			import spark.events.IndexChangeEvent;
			
			public function resetList(item:DropDownList):void {
				item.dataProvider = null;
				item.enabled = false;
			}
			
			public function stateName_changeHandler(event:IndexChangeEvent):void
			{
				var data:ArrayCollection = new ArrayCollection();
				
				if(stateName.selectedItem == "PENDING") {
					//substateName.dataProvider = [{"CREATED", "VALIDATED", "IDLED", "DEACTIVATED", "READY", "PAUSED"}];
					
					data = new ArrayCollection(
						[   
							{value:"CREATED"},
							{value:"VALIDATED"},
							{value:"IDLED"},
							{value:"DEACTIVATED"},
							{value:"READY"},
							{value:"PAUSED"}
						]                
					);
					substateName.enabled = true;
					resetList(statusName);
				} else if(stateName.selectedItem == "RUNNING") {
					data = new ArrayCollection(
						[   
							{value:"STAGE-IN"},
							{value:"MIGRATING"},
							{value:"ON-RESOURCE"},
							{value:"HELD"},
							{value:"STAGE-OUT"}
						]                
					);
					substateName.enabled = true;
					resetList(statusName);
				} else if(stateName.selectedItem == "CANCELLED") {
					data = null;
					substateName.enabled = false;
					resetList(statusName);
				} else if(stateName.selectedItem == "FAILED") {
					data = null;
					substateName.enabled = false;
					resetList(statusName);
				} else if(stateName.selectedItem == "FINISHED") {
					data = new ArrayCollection(
						[   
							{value:"STOPPED"},
							{value:"SKIPPED"},
							{value:"COMPLETED"},
						]                
					);
					substateName.enabled = true;
					resetList(statusName);
				}
				
				substateName.dataProvider = data;
			}
			
			public function refreshSubstateNameCombo():void {
				if(substateName.dataProvider != null) {
					// trace("Before : " + ObjectUtil.toString(substateName.dataProvider));
					(substateName.dataProvider as ArrayCollection).refresh();
					// trace("After : " + ObjectUtil.toString(substateName.dataProvider));
				}
			}
			
			public function substateName_changeHandler(event:IndexChangeEvent):void
			{
				var data:ArrayCollection = new ArrayCollection();
				
				if(substateName.selectedItem.value == "CREATED") {
					data = new ArrayCollection(
						[   
							{value:"DEVELOPMENT"},
							{value:"TEST"},
							{value:"REQUEST"},
							{value:"DEPLOYED"}
						]                
					);
					statusName.enabled = true;
				} else if(substateName.selectedItem.value == "VALIDATED") {
					data = null;
					statusName.enabled = false;
				} else if(substateName.selectedItem.value == "IDLED") {
					data = new ArrayCollection(
						[   
							{value:"BYTIME"},
							{value:"BYUSER"},
							{value:"BYEVENT"}
						]                
					);
					statusName.enabled = true;
				} else if(substateName.selectedItem.value == "DEACTIVATED") {
					data = null;
					statusName.enabled = false;
				} else if(substateName.selectedItem.value == "READY") {
					data = new ArrayCollection(
						[   
							{value:"LOOKFOR-RESOURCE"},
							{value:"USER-CHOOSE-RESOURCE"},
							{value:"USER-WAITING"},
							{value:"WAITING"},
							{value:"TRANSFERING"}
						]                
					);
					statusName.enabled = true;
				} else if(substateName.selectedItem.value == "PAUSED") {
					data = new ArrayCollection(
						[   
							{value:"BYUSER"}
						]                
					);
					statusName.enabled = true;
				} else if(substateName.selectedItem.value == "STAGE-IN") {
					data = null;
					statusName.enabled = false;
				} else if(substateName.selectedItem.value == "MIGRATING") {
					data = null;
					statusName.enabled = false;
				} else if(substateName.selectedItem.value == "ON-RESOURCE") {
					data = new ArrayCollection(
						[   
							{value:"TIME-IN"},
							{value:"TIME-OUT"}
						]                
					);
					statusName.enabled = true;
				} else if(substateName.selectedItem.value == "HELD") {
					data = null;
					statusName.enabled = false;
				} else if(substateName.selectedItem.value == "STAGE-OUT") {
					data = null;
					statusName.enabled = false;
				} else if(substateName.selectedItem.value == "STOPPED") {
					data = null;
					statusName.enabled = false;
				} else if(substateName.selectedItem.value == "SKIPPED") {
					data = null;
					statusName.enabled = false;
				} else if(substateName.selectedItem.value == "COMPLETED") {
					data = new ArrayCollection(
						[   
							{value:"SUCCESS"},
							{value:"WARNING"},
							{value:"FAILED"}
						]                
					);
					statusName.enabled = true;
				}
				
				statusName.dataProvider = data;
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	
	<s:FormItem label="{resourceManager.getString('messages', 'logAnalysState')}" width="140">
		<s:DropDownList id="stateName" width="110" prompt="Select Status" change="stateName_changeHandler(event)" selectedIndex="4"> 
			<s:dataProvider>
				<mx:ArrayList>
					<fx:String>PENDING</fx:String>
					<fx:String>RUNNING</fx:String>
					<fx:String>CANCELLED</fx:String>
					<fx:String>FAILED</fx:String>
					<fx:String>FINISHED</fx:String>
				</mx:ArrayList>
			</s:dataProvider>
		</s:DropDownList>
	</s:FormItem>
	
	<s:FormItem label="{resourceManager.getString('messages', 'logAnalysSubstate')}" width="170">
		<s:DropDownList id="substateName" width="120" prompt="Select Status" labelField="value" change="substateName_changeHandler(event)" enabled="true" selectedIndex="0"> 
			<s:dataProvider>
				<mx:ArrayList>
					<!--<fx:String>CREATED</fx:String>
					<fx:String>DEACTIVATED</fx:String>
					<fx:String>VALIDATED</fx:String>
					<fx:String>IDLED</fx:String>
					<fx:String>READY</fx:String>
					<fx:String>PAUSED</fx:String>
					<fx:String>STAGE-IN</fx:String>
					<fx:String>STAGE-OUT</fx:String>
					<fx:String>MIGRATING</fx:String>
					<fx:String>HELD</fx:String>
					<fx:String>ON-RESOURCE</fx:String>
					<fx:String>COMPLETED</fx:String>
					<fx:String>STOPPED</fx:String>
					<fx:String>SKIPPED</fx:String>-->
					<fx:Object value="COMPLETED"/>
					<fx:Object value="STOPPED"/>
					<fx:Object value="SKIPPED"/>
				</mx:ArrayList>
			</s:dataProvider>
		</s:DropDownList>
	</s:FormItem>
	<s:FormItem label="{resourceManager.getString('messages', 'logAnalysStatus')}">
		<s:DropDownList id="statusName" width="120" prompt="Select Status" labelField="value" enabled="true" selectedIndex="2"> 
			<s:dataProvider>
				<mx:ArrayList>
					<!--<fx:String>SUCCESS</fx:String>
					<fx:String>WARNING</fx:String>
					<fx:String>FAILED</fx:String>
					<fx:String>LOOKFOR-RESOURCE</fx:String>
					<fx:String>WAITING</fx:String>
					<fx:String>TRANSFERING</fx:String>
					<fx:String>TIME-IN</fx:String>
					<fx:String>TIME-OUT</fx:String>
					<fx:String>USER-CHOOSE-RESOURCE</fx:String>
					<fx:String>USER-WAITING</fx:String>
					<fx:String>BYTIME</fx:String>
					<fx:String>BYUSER</fx:String>
					<fx:String>BYEVENT</fx:String>
					<fx:String>DEVELOPMENT</fx:String>
					<fx:String>TEST</fx:String>
					<fx:String>REQUEST</fx:String>
					<fx:String>DEPLOYED</fx:String>-->
					<fx:Object value="SUCCESS"/>
					<fx:Object value="WARNING"/>
					<fx:Object value="FAILED"/>
										
				</mx:ArrayList>
			</s:dataProvider>
		</s:DropDownList>
	</s:FormItem>
	
</s:HGroup>
